import { ICrudRepositoryReadRequest, ICrudRepositoryReadResponse, IConnectorApi, ICrudRepositoryCreateResponse, ICrudRepositoryCreateRequest, ICrudRepositoryUpdateRequest, ICrudRepositoryUpdateResponse, ICrudRepositoryDeleteRequest, ICrudRepositoryDeleteResponse } from '@itexpert-dev/i-crud-repository';
import { Observable } from "rxjs";
import { ICrudRepositoryMetadataRequest } from "@itexpert-dev/i-crud-repository/dist/ICrudRepository/metadata/request/ICrudRepositoryMetadataRequest";
import { ICrudRepositoryMetadataResponse } from "@itexpert-dev/i-crud-repository/dist/ICrudRepository/metadata/response/ICrudRepositoryMetadataResponse";
export declare class BaseIndexedDBRepository implements IConnectorApi {
    protected dbName: string;
    protected dbVersion: number;
    protected constructorOnSuccessOpen(e: any): void;
    protected constructorOnUpgradeNeeded(e: any): void;
    protected constructorOnError(e: any): void;
    constructor(dbName: string, dbVersion: number);
    protected connect(): Observable<IDBDatabase>;
    create(query: ICrudRepositoryCreateRequest): Observable<ICrudRepositoryCreateResponse>;
    read(query: ICrudRepositoryReadRequest): Observable<ICrudRepositoryReadResponse>;
    update(query: ICrudRepositoryUpdateRequest): Observable<ICrudRepositoryUpdateResponse>;
    delete(query: ICrudRepositoryDeleteRequest): Observable<ICrudRepositoryDeleteResponse>;
    metadata(query: ICrudRepositoryMetadataRequest): Observable<ICrudRepositoryMetadataResponse>;
}
