import {ICrudRepositoryReadResponse} from './read/response/ICrudRepositoryReadResponse'
import {ICrudRepositoryCreateResponse} from './create/response/ICrudRepositoryCreateResponse'
import {ICrudRepositoryDeleteResponse} from "./delete/response/ICrudRepositoryDeleteResponse";
import {ICrudRepositoryReadRequest} from "./read/request/ICrudRepositoryReadRequest";
import {ICrudRepositoryCreateRequest} from "./create/request/ICrudRepositoryCreateRequest";
import {ICrudRepositoryDeleteRequest} from "./delete/request/ICrudRepositoryDeleteRequest";
import {ICrudRepositoryUpdateRequest} from "./update/request/ICrudRepositoryUpdateRequest";
import {ICrudRepositoryUpdateResponse} from "./update/response/ICrudRepositoryUpdateResponse";
import {Observable} from "rxjs";
import {ICrudRepositoryMetadataRequest} from "./metadata/request/ICrudRepositoryMetadataRequest";
import {ICrudRepositoryMetadataResponse} from "./metadata/response/ICrudRepositoryMetadataResponse";

interface IConnectorApi{
    read(request:ICrudRepositoryReadRequest):Observable<ICrudRepositoryReadResponse>;
    create(request:ICrudRepositoryCreateRequest):Observable<ICrudRepositoryCreateResponse>;
    update(request:ICrudRepositoryUpdateRequest):Observable<ICrudRepositoryUpdateResponse>;
    delete(request:ICrudRepositoryDeleteRequest):Observable<ICrudRepositoryDeleteResponse>;
    metadata(request:ICrudRepositoryMetadataRequest):Observable<ICrudRepositoryMetadataResponse>;
}

export {IConnectorApi}