import {IUniversalTableState} from "../common/interfaces/IUniversalTableState";
import {Component} from "@angular/core";
import {IUniversalTableComponents} from "./interfaces/IUniversalTableDefaultComponents";
import {IDictionary} from '@itexpert-dev/i-dictionary'
import {ComponentsKeyValueStorage} from '@itexpert-dev/components-key-value-storage'
import {KeyValueStorage} from '@itexpert-dev/key-value-storage'

class UniversalTableConfigurator{
    constructor(){
        this.cellTypeToComponentMap.add({key: 'primary', value: 'primaryCell'})
    }
    public componentsStorage = new ComponentsKeyValueStorage();
    public cellsStorage = new ComponentsKeyValueStorage();

    public cellTypeToComponentMap = new KeyValueStorage<string>();

    protected _defaultInitTableState: IUniversalTableState;
    protected componentsScope: IDictionary<Component>;

    public setDefaultInitTableState(newState: IUniversalTableState){
        this._defaultInitTableState = newState;
    }
    public getDefaultInitTableState():IUniversalTableState{
        return this._defaultInitTableState
    }

    private _defaultComponents: IUniversalTableComponents;
    public setDefaultComponents(components: IUniversalTableComponents){
        this._defaultComponents = components
    }
    public getDefaultComponents():IUniversalTableComponents{
        return this._defaultComponents
    }

    private _defaultLimitSteps: number[];
    public setDefaultLimitSteps(...steps: number[]){
        this._defaultLimitSteps = steps
    }
    public getDefaultLimitSteps():number[]{
        return this._defaultLimitSteps
    }
}

export {UniversalTableConfigurator, IUniversalTableComponents}