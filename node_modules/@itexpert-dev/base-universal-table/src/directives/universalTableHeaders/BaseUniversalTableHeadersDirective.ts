import {UniversalTableHeaderData} from "./universalTableHeaders.directive";
import {ReflectiveInjector, ComponentFactoryResolver, ViewContainerRef, Injector} from "@angular/core";
import {isNull} from "@itexpert-dev/tiny-helpers";
import {AngularInputValidator} from "../common/angularInputValidator";
import {UniversalTableCtrl} from "../../services/universalTable/universalTableCtrl";
import {BaseUniversalTableDirective} from "../common/baseUniversalTableDirective";
import {baseUniversalTableHeadersDirectiveConfig} from "./baseUniversalTableHeadersDirectiveConfig.const";

abstract class BaseUniversalTableHeadersDirective extends BaseUniversalTableDirective{
    protected headerIndex: number;
    protected headerData: any;

    constructor(
        tableCtrl: UniversalTableCtrl,
        componentResolver: ComponentFactoryResolver,
        viewContainer: ViewContainerRef,
        private injector: Injector
    ){
        super(
            componentResolver,
            viewContainer,
            tableCtrl
        );
    }

    ngOnInit(){
        let validateResult = AngularInputValidator.checkRequireAttributes({
            requireAttributes: ['headerIndex', 'headerData'],
            directiveContext: this,
            rightExample: `${baseUniversalTableHeadersDirectiveConfig.selector}(("[headerIndex]"="headerIndex", "[headerData]"="header")`
        });
        if(!isNull(validateResult)){
            throw validateResult
        }
        let header = this.resolveTablePart('headers');
        let injector = ReflectiveInjector.resolveAndCreate(
            [{
                provide: UniversalTableHeaderData,
                useValue: {
                    headerIndex: this.headerIndex,
                    headerData: this.headerData
                }
            }],
            this.injector
        );
        this.viewContainer.createComponent(header, 0, injector);
    }
}

export {BaseUniversalTableHeadersDirective}