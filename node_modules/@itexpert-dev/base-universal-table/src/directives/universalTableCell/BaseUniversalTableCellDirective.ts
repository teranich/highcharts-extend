import {BaseUniversalTableDirective} from "../common/baseUniversalTableDirective";
import {Input, ComponentFactoryResolver, ViewContainerRef, Injector, ReflectiveInjector} from "@angular/core";
import {UniversalTableCtrl} from "../../services/universalTable/universalTableCtrl";
import {AngularInputValidator} from "../common/angularInputValidator";
import {isNull} from "@itexpert-dev/tiny-helpers";
import {BaseUniversalTableCellComponent} from "../../baseComponents/universalTableDataCell/BaseUniversalTableDataCellComponent";
import {baseUniversalTableCellDirectiveConfig} from "./baseUniversalTableCellDirectiveConfig.const";
import {UniversalTableCellPosition} from "./UniversalTableCellPosition";

abstract class BaseUniversalTableCellDirective extends BaseUniversalTableDirective{
    @Input() rowIndex: number;
    @Input() cellIndex: number;
    @Input() cellData: any;

    protected componentResolver: ComponentFactoryResolver;
    protected viewContainer: ViewContainerRef;

    constructor(
        tableCtrl: UniversalTableCtrl,
        componentResolver: ComponentFactoryResolver,
        viewContainer: ViewContainerRef,
        protected injector: Injector
    ){
        super(
            componentResolver,
            viewContainer,
            tableCtrl
        );
    }

    ngOnInit(){
        let validateResult = AngularInputValidator.checkRequireAttributes({
            requireAttributes: ['rowIndex', 'cellIndex', 'cellData'],
            directiveContext: this,
            rightExample: `${baseUniversalTableCellDirectiveConfig.selector}(("[rowIndex]"="rowIndex", "[cellIndex]"="cellIndex", "[cellData]"="cellData")`
        });
        if(!isNull(validateResult)){
            throw validateResult
        }

        let originCell = this.cellData;
        let cellType = originCell.type;
        let cellComponent = this.resolveCellByType(cellType);

        let cellPosition: UniversalTableCellPosition = {
            cellData: this.cellData,
            cellIndex: this.cellIndex,
            rowIndex: this.rowIndex
        };
        let injector = ReflectiveInjector.resolveAndCreate(
            [{
                provide: UniversalTableCellPosition,
                useValue: cellPosition
            }],
            this.injector
        );
        let cell = this.viewContainer.createComponent(cellComponent, 0, injector);
        originCell.instance = <BaseUniversalTableCellComponent>cell.instance;
    }
}

export {BaseUniversalTableCellDirective}