import { IUniversalTableState } from "../common/interfaces/IUniversalTableState";
import { Component } from "@angular/core";
import { IUniversalTableComponents } from "./interfaces/IUniversalTableDefaultComponents";
import { IDictionary } from '@itexpert-dev/i-dictionary';
import { ComponentsKeyValueStorage } from '@itexpert-dev/components-key-value-storage';
import { KeyValueStorage } from '@itexpert-dev/key-value-storage';
declare class UniversalTableConfigurator {
    constructor();
    componentsStorage: ComponentsKeyValueStorage;
    cellsStorage: ComponentsKeyValueStorage;
    cellTypeToComponentMap: KeyValueStorage<string>;
    protected _defaultInitTableState: IUniversalTableState;
    protected componentsScope: IDictionary<Component>;
    setDefaultInitTableState(newState: IUniversalTableState): void;
    getDefaultInitTableState(): IUniversalTableState;
    private _defaultComponents;
    setDefaultComponents(components: IUniversalTableComponents): void;
    getDefaultComponents(): IUniversalTableComponents;
    private _defaultLimitSteps;
    setDefaultLimitSteps(...steps: number[]): void;
    getDefaultLimitSteps(): number[];
}
export { UniversalTableConfigurator, IUniversalTableComponents };
