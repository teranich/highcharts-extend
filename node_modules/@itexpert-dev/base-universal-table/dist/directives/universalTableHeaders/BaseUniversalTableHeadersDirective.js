"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var universalTableHeaders_directive_1 = require("./universalTableHeaders.directive");
var core_1 = require("@angular/core");
var tiny_helpers_1 = require("@itexpert-dev/tiny-helpers");
var angularInputValidator_1 = require("../common/angularInputValidator");
var baseUniversalTableDirective_1 = require("../common/baseUniversalTableDirective");
var baseUniversalTableHeadersDirectiveConfig_const_1 = require("./baseUniversalTableHeadersDirectiveConfig.const");
var BaseUniversalTableHeadersDirective = (function (_super) {
    __extends(BaseUniversalTableHeadersDirective, _super);
    function BaseUniversalTableHeadersDirective(tableCtrl, componentResolver, viewContainer, injector) {
        var _this = _super.call(this, componentResolver, viewContainer, tableCtrl) || this;
        _this.injector = injector;
        return _this;
    }
    BaseUniversalTableHeadersDirective.prototype.ngOnInit = function () {
        var validateResult = angularInputValidator_1.AngularInputValidator.checkRequireAttributes({
            requireAttributes: ['headerIndex', 'headerData'],
            directiveContext: this,
            rightExample: baseUniversalTableHeadersDirectiveConfig_const_1.baseUniversalTableHeadersDirectiveConfig.selector + "((\"[headerIndex]\"=\"headerIndex\", \"[headerData]\"=\"header\")"
        });
        if (!tiny_helpers_1.isNull(validateResult)) {
            throw validateResult;
        }
        var header = this.resolveTablePart('headers');
        var injector = core_1.ReflectiveInjector.resolveAndCreate([{
                provide: universalTableHeaders_directive_1.UniversalTableHeaderData,
                useValue: {
                    headerIndex: this.headerIndex,
                    headerData: this.headerData
                }
            }], this.injector);
        this.viewContainer.createComponent(header, 0, injector);
    };
    return BaseUniversalTableHeadersDirective;
}(baseUniversalTableDirective_1.BaseUniversalTableDirective));
exports.BaseUniversalTableHeadersDirective = BaseUniversalTableHeadersDirective;
//# sourceMappingURL=BaseUniversalTableHeadersDirective.js.map